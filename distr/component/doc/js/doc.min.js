/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 998:
/***/ (() => {

var bdExample = document.querySelectorAll('.bd-example-indeterminate [type="checkbox"]');
var bdContent = document.querySelectorAll('.bd-content [href="#"]');
var exModal = document.querySelector('#exampleModal');

if(bdExample)
{
    bdExample.forEach(
        function(el)
        {
            el.indeterminate = true;
        }
    )
}

if(bdContent)
{
    bdContent.forEach(
        function(el)
        {
            el.addEventListener(
                'click',
                function(e)
                {
                    e.preventDefault();
                }
            )
        }
    )
}

if(exModal)
{
    exModal.addEventListener(
        'show.bs.modal',
        function(e)
        {
            var btn = e.relatedTarget;
            var recipient = btn.getAttribute('data-whatever');
            var modalTitle = this.querySelector('.modal-title');
            var modalInput = this.querySelectorAll('.modal-body input');

            if(modalTitle)
            {
                modalTitle.innerHTML = 'New message to ' + recipient;
            }
            
            if(modalInput)
            {
                modalInput.forEach(
                    function(el)
                    {
                        el.value = recipient;
                    }
                )
            }

        }
    )
}

var bdToogleAnimated = document.querySelectorAll('.bd-toggle-animated-progress');

if(bdToogleAnimated)
{
    bdToogleAnimated.forEach(
        function(el)
        {
            el.addEventListener(
                'click',
                function(e)
                {
                    let progress = this.parentNode.querySelectorAll('.progress');
                    if(progress)
                    {
                        progress.forEach(
                            function(pEl)
                            {
                                progressBar = pEl.querySelector('.progress-bar-striped');
                                if(progressBar)
                                {
                                    progressBar.classList.toggle('progress-bar-animated')
                                }
                            }
                        )
                    }
                }
            )
        }
    )
}


//

var source = document.querySelectorAll('.source')

if(source)
{
    source.forEach(
        function(el)
        {
            let divClip = document.createElement('div');
            let spanClip = document.createElement('span');
            let iconClip = document.createElement('i');

            divClip.classList.add('clipboard');
            spanClip.classList.add('btn-clipboard','transition');
            spanClip.title = 'Copy Code';
            iconClip.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" style="width:1em;height:1em" fill="currentColor"><path d="M224 0c-35.3 0-64 28.7-64 64V288c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H224zM64 160c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H288c35.3 0 64-28.7 64-64V384H288v64H64V224h64V160H64z"/></svg>';
            //iconClip.classList.add('fa', 'fa-copy');

            spanClip.append(iconClip);
            divClip.append(spanClip);
            el.prepend(divClip);
        }
    )
}

try
{
    if(document.querySelectorAll('.btn-clipboard').length > 0)
    {
        var clipboard = new ClipboardJS(
            '.btn-clipboard',
            {
                target: function (trigger)
                {
                    return trigger.parentNode.nextElementSibling
                }
            }
        )

        clipboard.on('success', function(e) {
            var modifierKey = /Mac/i.test(navigator.userAgent) ? '\u2318' : 'Ctrl-'
            var fallbackMsg = 'Press ' + modifierKey + 'C to copy'
        });
    }
}
catch(err)
{
    console.log(err)
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

// EXTERNAL MODULE: ../sf5/src/component/doc/js/_doc.js
var _doc = __webpack_require__(998);
;// CONCATENATED MODULE: ../sf5/src/component/doc/js/index.js


;// CONCATENATED MODULE: ../sf5/src/component/doc/index.js


})();

/******/ })()
;